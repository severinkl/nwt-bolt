from .base_scenario import BaseScenario


class Scenario(BaseScenario):
    name = "HTTP (ORF) Level 1"
    description = "Simulates HTTP traffic for ORF website"
    maximum_steps = 15  # Fixed maximum steps to match actual steps

    def execute_step(self, step):
        """Execute step based on role and return image path"""
        self.state["step"] = step

        match self.role:
            case "firewall":
                return self.handle_firewall()
            case "router":
                return self.handle_router()
            case "switch":
                return self.handle_switch()
            case "main":
                return self.handle_main()
            case "dns":
                return self.handle_dns()
            case "server":
                return self.handle_server()
        return "images/fhstp_logo.png"

    def handle_firewall(self):
        match self.state["step"]:
            case 3:
                return "images/http/http_check.png"
            case 4:
                return "images/http/http_checked.png"
            case 9:
                return "images/http/website.png"
            case _:
                return "images/firwall.jpg"

    def handle_router(self):
        match self.state["step"]:
            case 2:
                return "images/http/http_header.jpg"
            case 10:
                return "images/http/website.png"
            case 11:
                return "images/http/Plaintext.png"
            case _:
                return "images/router.jpg"

    def handle_switch(self):
        match self.state["step"]:
            case 1:
                return "images/http/http_header.jpg"
            case 12:
                return "images/http/website.png"
            case _:
                return "images/switch.png"

    def handle_main(self):
        match self.state["step"]:
            case 1:
                return "images/switch.png"
            case 2:
                return "images/router.jpg"
            case 3:
                return "images/firwall.jpg"
            case 4:
                return "images/firwall.jpg"
            case 5:
                return "images/server.png"
            case 6:
                return "images/server.png"
            case 7:
                return "images/server.png"
            case 8:
                return "images/server.png"
            case 9:
                return "images/firwall.jpg"
            case 10:
                return "images/router.jpg"
            case 11:
                return "images/router.jpg"
            case 12:
                return "images/switch.png"
            case 13:
                return "images/http/DeliverHTML.png"
            case 14:
                return "images/http/orf.png"
            case _:
                return "images/orf_at_1.png"
            
    def handle_dns(self):
        match self.state["step"]:
            case _:
                    return "images/dns.png"

    def handle_server(self):
        match self.state["step"]:
            case 5:
                return "images/http/http_header.jpg"
            case 6:
                return "images/http/QueryPage.png"
            case 7:
                return "images/http/FoundPage.png"
            case 8:
                return "images/http/DeliverHTML.png"
            case _:
                    return "images/server.png"
